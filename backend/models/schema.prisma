// this is the schema for the happy hacker habits app - which defines the
// data model for the app. Uses Prisma ORM and is written in Prisma's schema language

// important note: the migration files should be pushed to the repo
// to preserve the history of the database schema and ensure that future 
// migrations run correctly

//TODO: add useful comments to the schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId              Int       @id @default(autoincrement()) @map("user_id")
  email               String    @unique @db.VarChar(360)
  passwordHash        String    @db.VarChar(64) @map("password_hash")
  createdAt           DateTime  @default(now()) @map("created_at")
  emailConfirmedAt    DateTime? @map("email_confirmed_at")
  profile             Profile?
  savedQuotes         SavedQuote[]
  goals               Goal[]

  @@map("user")
}

model Profile {
  profileId          Int       @id @default(autoincrement()) @map("profile_id")
  displayName        String?   @db.VarChar(40) @map("display_name")
  user               User      @relation(fields: [userId], references: [userId])
  userId             Int       @unique @map("user_id")

  @@map("profile")
}

// TODO: should qoute text be unique? (we might run out of qoutes from the API though?)
model Quote {
  quoteId            Int       @id @default(autoincrement()) @map("quote_id")
  quoteText          String    @db.Text @map("quote_text")
  quoteAuthor        String    @db.Text @map("quote_author")
  generatedAt        DateTime  @default(now()) @map("generated_at")
  usersWhoSaved      SavedQuote[]

  @@map("quote")
}

model SavedQuote {
  user                User      @relation(fields: [userId], references: [userId])
  userId              Int       @map("user_id")
  quote               Quote     @relation(fields: [quoteId], references: [quoteId])
  quoteId             Int       @map("quote_id")
  savedAt             DateTime  @default(now()) @map("saved_at")

  @@id([userId, quoteId])
  @@map("saved_quote")
}

model Goal {
  goalId             Int       @id @default(autoincrement()) @map("goal_id")
  goalName           String    @db.Text @map("goal_name")
  goalDescription    String?   @db.Text @map("goal_description")
  createdAt          DateTime  @default(now()) @map("created_at")
  deployedAt         DateTime? @map("deployed_at")
  user               User      @relation(fields: [userId], references: [userId])
  userId             Int       @map("user_id")
  tasks              Task[]
  habits             Habit[]

  @@map("goal")
}

model Task {
  taskId             Int       @id @default(autoincrement()) @map("task_id")
  taskName           String    @db.Text @map("task_name")
  taskDescription    String?   @db.Text @map("task_description")
  createdAt          DateTime  @default(now()) @map("created_at")
  scheduledAt        DateTime? @map("scheduled_at")
  endsAt             DateTime? @map("ends_at")
  committedAt        DateTime? @map("committed_at")
  goal               Goal      @relation(fields: [goalId], references: [goalId])
  goalId             Int       @map("goal_id")

  @@map("task")
}

model Habit {
  habitId            Int             @id @default(autoincrement()) @map("habit_id")
  habitName          String          @db.Text @map("habit_name")
  habitDescription   String?         @db.Text @map("habit_description")
  createdAt          DateTime        @default(now()) @map("created_at")
  startAt            DateTime?       @map("start_at")
  endsAt             DateTime?       @map("ends_at")
  frequency          HabitFrequency  @default(DAILY)
  daysOfWeek         DayOfWeek[]
  deployedAt         DateTime?       @map("deployed_at")
  goal               Goal            @relation(fields: [goalId], references: [goalId])
  goalId             Int             @map("goal_id")
  commits            HabitCommit[]

  @@map("habit")
}

model HabitCommit {
  habitCommitId      Int       @id @default(autoincrement()) @map("habit_commit_id")
  habit              Habit     @relation(fields: [habitId], references: [habitId])
  habitId            Int       @map("habit_id")
  committedAt        DateTime  @default(now()) @map("committed_at")

  @@map("habit_commit")
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY

  @@map("day_of_week")
}

enum HabitFrequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY

  @@map("habit_frequency")
}
