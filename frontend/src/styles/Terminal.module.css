/* styling the terminal container */
.terminal {
  height: 100%;
  background-color: var(--main-bg-color);
  color: var(--main-text-color);
  border-top: 1px solid var(--main-border-color);
  border-bottom: 1px solid var(--main-border-color);
  border-left: 1px solid var(--main-border-color);
  font-family: 'Source Sans Pro', sans-serif;
  overflow-y: auto;
}

/* style the terminal tabs to look like VS code terminal tabs*/
/* TODO: The tabs need to be made unable to overflow to multiple 
   lines when it gets too small somehow (but want to keep it usable somehow still...)*/
.terminalTabs {
  display: flex;
  justify-content: row;
}

.terminalTab {
  padding: 0.5rem 0.75rem;
  margin: 0 0.5rem;
  margin-bottom: 0.5rem;
  font-family: 'Source Sans Pro', sans-serif;
  border : none;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 0.9rem;
  letter-spacing: 1px;
  background-color: var(--main-bg-color);
  color: var(--secondary-text-color);
}

.terminalTab:hover {
  cursor: pointer;
  background-color: var(--main-bg-color);
  color: var(--main-text-color);
}

.activeTab {
  border-bottom: 1px solid var(--accent-color-2);
  color: var(--main-text-color);
}

/* make content in the terminal wrap around and overflow to next line + look like code */
.terminalView {
  margin: 0;
  padding-left: 1rem;
  overflow: auto;
  white-space: pre-wrap;
  word-wrap: break-word;
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New';
}

/* remove paragraph margins in the terminal */
.terminalView p {
  margin: 0;
}


/*TODO: will probably need another style for the content that is already 
  in the terminal and comes before the newest output (and need to keep the path coloring somehow?) */


/* Terminal path (thing before the $) styling */
.terminalPath {
  color: var(--accent-color-3);
}

/* Terminal output animation styling (will look like it is being typed */
.terminalOutput {
  --n: 1000;
  color:#0000;
  background:
    linear-gradient(-90deg, var(--accent-color-3) 5px,#0000 0) 10px 0, /* cursor part of animation */
    linear-gradient(var(--main-text-color) 0 0) 0 0; /* text part of animation */
  background-size: calc(var(--n)*1ch) 200%;
  -webkit-background-clip:padding-box,text;
  background-clip:padding-box,text;
  background-repeat:no-repeat;
  animation: 
   blink .5s infinite steps(1),   
   typewriter calc(var(--n)*.04s) steps(var(--n)) forwards;
}

@keyframes typewriter {
  from {background-size:0 200%}
}
@keyframes blink {
  50% {background-position:0 -100%, 0 0}
}
